@startuml
package Message{

    Interface IMessageRepository{
        +add(message: Message): void
        +delete(message_id: string): void
        +get(message_id: string): User
        +save(message: Message): void
        +all(room_id): Message[]
    }

    class Message{
        #repository: IMessageRepository
        #message_id?: string
        #message: string
        #user: User
        #file?: File
        #room_id: string
        #counter: number
        +constructor(message: Message,repository: IMessageRepository)
        +delete(message_id: string): void
        +edit(message: Message): void
        +add(message: Message): void
    }

    class Messages{
        #repository: IMessageRepository
        +all() : Message[]
        +more(): Message[]
        +search(): Message[]
    }

    class MessageContoroller{
        +add(message: Message): void
        +delete(message: Message): void
        +edit(message: Message): void
        +all(): Messages
        +typing(): void
    }

    class MessageRepositoryFactory{
        +create()
    }
    class MessageRepository
}

MessageRepository <.. MessageRepositoryFactory: <<create>>
Message <.. MessageContoroller
Messages <.. MessageContoroller
User <-- Message
IMessageRepository <.. Message
IMessageRepository <.. Messages
ReadConfig <-- MessageRepositoryFactory
IMessageRepository <|-- MessageRepository

@enduml